"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.removeFileContent = exports.test = void 0;
const detect_1 = require("../../../../lib/detect");
const analytics_1 = require("./analytics");
const measurable_methods_1 = require("./measurable-methods");
// this method executes the local processing engine and then formats the results to adapt with the CLI output.
// the current version is dependent on files to be present locally which are not part of the source code.
// without these files this method would fail.
// if you're interested in trying out the experimental local execution model for IaC scanning, please reach-out.
async function test(pathToScan, options) {
    await measurable_methods_1.initLocalCache();
    const filesToParse = await measurable_methods_1.loadFiles(pathToScan, options);
    const { parsedFiles, failedFiles } = await measurable_methods_1.parseFiles(filesToParse, options);
    const scannedFiles = await measurable_methods_1.scanFiles(parsedFiles);
    const iacOrgSettings = await measurable_methods_1.getIacOrgSettings();
    const resultsWithCustomSeverities = await measurable_methods_1.applyCustomSeverities(scannedFiles, iacOrgSettings.customPolicies);
    const formattedResults = measurable_methods_1.formatScanResults(resultsWithCustomSeverities, options, iacOrgSettings.meta);
    analytics_1.addIacAnalytics(formattedResults);
    measurable_methods_1.cleanLocalCache();
    // TODO: add support for proper typing of old TestResult interface.
    return {
        results: formattedResults,
        // NOTE: No file or parsed file data should leave this function.
        failures: detect_1.isLocalFolder(pathToScan)
            ? failedFiles.map(removeFileContent)
            : undefined,
    };
}
exports.test = test;
function removeFileContent({ filePath, fileType, failureReason, projectType, }) {
    return {
        filePath,
        fileType,
        failureReason,
        projectType,
    };
}
exports.removeFileContent = removeFileContent;
//# sourceMappingURL=index.js.map